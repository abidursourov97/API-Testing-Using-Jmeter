{
	"info": {
		"_postman_id": "f03bebd8-b26f-44bb-9e8d-451000c291e7",
		"name": "Batch29",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39630081"
	},
	"item": [
		{
			"name": "Create  Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsondata = pm.response.json()\r",
							"pm.environment.set(\"id\",jsondata.bookingid)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstname = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"\r",
							"console.log(firstname)\r",
							"pm.environment.set(\"firstname\",firstname)\r",
							"\r",
							"var lastname = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"console.log(lastname)\r",
							"pm.environment.set(\"lastname\",lastname)\r",
							"\r",
							"var totalprice = pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"console.log(totalprice)\r",
							"pm.environment.set(\"totalprice\",totalprice)\r",
							"\r",
							"var depositpaid = pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"console.log(depositpaid)\r",
							"pm.environment.set(\"depositpaid\",depositpaid)\r",
							"\r",
							"//date future\r",
							"const moment = require('moment')\r",
							"const today = moment()\r",
							"console.log(today.add(1,'D').add(3,'M').format(\"YYYY-MM-DD\"))\r",
							"var checkin = today.add(1,'d').add(3,'m').format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\"checkin\",checkin)\r",
							"\r",
							"//date previous\r",
							"\r",
							"\r",
							"var checkout = today.subtract(1,'d').subtract(3,'m').format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\"checkout\",checkout)\r",
							"\r",
							"\r",
							"var additionalneeds = pm.variables.replaceIn(\"{{$randomCurrencyCode}}\")\r",
							"console.log(additionalneeds)\r",
							"pm.environment.set(\"additionalneeds\",additionalneeds)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"{{firstname}}\",\r\n\t\"lastname\" : \"{{lastname}}\",\r\n\t\"totalprice\" : {{totalprice}},\r\n\t\"depositpaid\" : {{depositpaid}},\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"{{checkin}}\",\r\n    \t\"checkout\" : \"{{checkout}}\"\r\n\t},\r\n\t\"additionalneeds\" : \"{{additionalneeds}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base-url}}/booking/",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"booking",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var statusCode = pm.response.code\r",
							"console.log(statusCode)\r",
							"\r",
							"if(statusCode==200){\r",
							"var json = pm.response.json()\r",
							"\r",
							"pm.test(\"first name validation\",function(){\r",
							" pm.expect(json.firstname).to.eql(pm.environment.get(\"firstname\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Last name validation\",function(){\r",
							" pm.expect(json.lastname).to.eql(pm.environment.get(\"lastname\"))\r",
							"})\r",
							"\r",
							"pm.test(\"total price validation\",function(){\r",
							"    pm.expect(json.totalprice.toString()).to.eql(pm.environment.get(\"totalprice\"))\r",
							"})\r",
							"\r",
							"pm.test(\"depositepaid validayion\",function(){\r",
							"    pm.expect(json.depositepaid).to.eql(Boolean(pm.environment.get(\"depositpaid\")))\r",
							"})\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"checkin  validation\",function(){\r",
							"    pm.expect(json.bookingdates.checkin).to.eql(pm.environment.get(\"checkin\"))\r",
							"})\r",
							"\r",
							"pm.test(\"checkout  validation\",function(){\r",
							"    pm.expect(json.bookingdates.checkout).to.eql(pm.environment.get(\"checkout\"))\r",
							"})\r",
							"\r",
							"pm.test(\"additionalneeds  validation\",function(){\r",
							"    pm.expect(json.additionalneeds).to.eql(pm.environment.get(\"additionalneeds\"))\r",
							"})\r",
							"}\r",
							" else if(ststusCode==404){\r",
							"pm.test(\"Not Found\")\r",
							"}\r",
							"else{\r",
							"pm.test(\"Something went wrong\")\r",
							"\r",
							"}\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base-url}}/booking/{{id}}",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsondata=pm.response.json()\r",
							"pm.environment.set(\"access token\",jsondata.token)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"username\": \"admin\",\r\n\t\"password\": \"password123\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base-url}}/auth",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Booking",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var updated_firstname = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"\r",
							"console.log(updated_firstname)\r",
							"pm.environment.set(\"updated_firstname\",updated_firstname)\r",
							"\r",
							"\r",
							"var updated_lastname = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"\r",
							"console.log(updated_lastname )\r",
							"pm.environment.set(\"updated_lastname \",updated_lastname )\r",
							"\r",
							"var updated_totalprice = pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"console.log(updated_totalprice)\r",
							"pm.environment.set(\"updated_totalprice\",updated_totalprice)\r",
							"\r",
							"var update_depositepaid = pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"console.log(update_depositepaid)\r",
							"pm.environment.set(\"update_depositepaid\",update_depositepaid)\r",
							"\r",
							"const moment = require('moment')\r",
							"const today = moment()\r",
							"console.log(today.add(1,'D').add(3,'M').format(\"YYYY-MM-DD\"))\r",
							"var checkin = today.add(1,'d').add(3,'m').format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\"checkin\",checkin)\r",
							"\r",
							"\r",
							"//var checkout = today.subtract(1,'d').subtract(3,'m').format(\"YYYY-MM-DD\")\r",
							"//pm.environment.set(\"checkout\",checkout)\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{access token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"{{updated_firstname}}\",\r\n\t\"lastname\" : \"{{updated_lastname }}\",\r\n\t\"totalprice\" : {{updated_totalprice}},\r\n\t\"depositpaid\" : {{depositpaid}},\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"{{checkin}}\",\r\n    \t\"checkout\" : \"{{checkout}}\"\r\n\t},\r\n\t\"additionalneeds\" : \"{{additionalneeds}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base-url}}/booking/{{id}}",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "verify after update",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": ""
				}
			},
			"response": []
		},
		{
			"name": "Delete",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base-url}}/booking/{{id}}",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}